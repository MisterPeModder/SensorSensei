name: Continuous Integration

on:
  push:
    branches:
      - master
    paths-ignore:
      - "**/README.md"
  pull_request:
    branches:
      - master
    paths-ignore:
      - "**/README.md"
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  rust-checks:
    name: Rust Checks - ${{ matrix.directory }}
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        directory:
          - gateway-board
          - sensor-board

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: esp-rs/xtensa-toolchain@v1.5
        with:
          default: true
          buildtargets: esp32
          ldproxy: false

      - name: Enable caching
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: ${{ matrix.directory }}

      - name: Cargo Build
        working-directory: ${{ matrix.directory }}
        run: cargo build --release || echo "CI_FAILED=true" >> $GITHUB_ENV

      - name: Cargo Format
        working-directory: ${{ matrix.directory }}
        run: cargo fmt --all -- --check --color always || echo "CI_FAILED=true" >> $GITHUB_ENV

      - name: Cargo Clippy
        working-directory: ${{ matrix.directory }}
        run: cargo clippy --all-features -- -D warnings || echo "CI_FAILED=true" >> $GITHUB_ENV

      - name: Final Status Check
        run: |
          if [[ "$CI_FAILED" == "true" ]]; then
            echo "One or more cargo checks failed."
            exit 1
          fi
